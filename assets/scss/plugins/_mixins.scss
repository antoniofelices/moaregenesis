/*
 *
 * Mixins
 *
 */

// Media Queries
@mixin breakpoint( $breakpoint ) {
  @if map-has-key( $breakpoints, $breakpoint) {
    @media ( min-width: #{ map-get( $breakpoints, $breakpoint ) }) {
      @content;
    }
  }
  @else if type_of( $breakpoint)==number and unit( $breakpoint)==px or unit( $breakpoint)==em or unit( $breakpoint)==rem {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately no value could be retrieved from `#{$breakpoint}`. "+"Please make sure it is defined in `$breakpoints` map, or it is a valid number with supported unit of px, em or rem.";
  }
}

// Boders
@mixin borderB($width: 1px, $style: solid, $color: $brand-primary){
  border: $width $style $color;
}

@mixin borderBT($width: 1px, $style: solid, $color: $brand-primary){
  border-top: $width $style $color;
}

@mixin borderBR($width: 1px, $style: solid, $color: $brand-primary){
  border-right: $width $style $color;
}

@mixin borderBB($width: 1px, $style: solid, $color: $brand-primary){
  border-bottom: $width $style $color;
}

@mixin borderBL($width: 1px, $style: solid, $color: $brand-primary){
  border-left: $width $style $color;
}

// Flex
@mixin flex( $justifycontent: center, $alignitems: center ) {
	display: -ms-flexbox;
  display: flex;
  justify-content: $justifycontent;
  align-items: $alignitems;
}

// Grid
@mixin grid( $grid-template-rows: auto, $grid-template-columns: 3, $grid-gap-vertical: $magic-number, $grid-gap-horizontal: $magic-number ) {
  display: -ms-grid;
  display: grid;
  grid-template-rows: $grid-template-rows;
  grid-template-columns: repeat($grid-template-columns, 1fr [col]);
  grid-gap: $grid-gap-vertical $grid-gap-horizontal;
}

// Vertical rhythms
@mixin padding-vertical( $top: $magic-number, $bottom: $magic-number ) {
  padding-top: $top;
  padding-bottom:  $bottom;
  @include breakpoint(xxl) {
    padding-top: ( $top * 2 );
    padding-bottom: ( $bottom * 2 );
  }
}

@mixin margin-vertical( $top: $magic-number, $bottom: $magic-number ) {
  margin-top: $top;
  margin-bottom: $bottom;
  @include breakpoint(xxl) {
    margin-top: ( $top * 2 );
    margin-bottom: ( $bottom * 2 );
  }
}

// Gutters
@mixin padding-horizontal( $right: $gutter, $left: $gutter ){
  padding-right: $right;
  padding-left: $left;
  @include breakpoint( $responsive-menu-break ) {
    padding-right: 0;
    padding-left: 0;
  }
}

// Buttons
@mixin primary-button( $display: inline, $color: $body-color, $bgcolor: $white, $width: auto, $bordercolor: $white, $padding: $magic-number, $hovercolor: $white, $hoverbgcolor: $link-hover-color ){
  font: $font-weight-normal $font-size-base $font-family-sans-serif;
  display: $display;
  color: $color;
  background-color: $bgcolor;
  width: $width;
  text-align: center;
  @include borderB( $color: $bordercolor );
  transition: all .3s ease;
  padding: ( $padding / 2 ) $padding;
  &:hover, &:active, &:focus{
    color: $hovercolor;
    background-color: $hoverbgcolor;
    border-color: darken($hoverbgcolor, 10%);
  }
  a{
    border-bottom: none;
  }
}

// Lists
@mixin main-list() {
  margin: 0;
  padding: 0;
  list-style: none;
  > li{
    margin: 0;
    @include borderBB( $color: $gray-lighter );
    @include padding-vertical( $top: ( $magic-number / 2 ), $bottom: ( $magic-number / 2 ) );
    @include flex( $justifycontent: start )
    &:before{
      content: '\e903';
      color: $gray-light;
      font: normal $font-size-h1 $font-family-icons;
      line-height: $line-height-xs;
    }
    a{
      border-bottom: none;
    }
  }
}

// Grafic resourses. Border after.
@mixin border-after( $width: 10%, $height: 4px, $color: darken($gray-lighter,5%), $margin-top-bottom: $magic-number ){
  &:after{
    content: ' ';
    display: block;
    width: $width;
    height: $height;
    margin: ( $margin-top-bottom / 2 ) 0;
    background-color: $color;
    @include breakpoint(sm){
      margin: $margin-top-bottom 0;
    }
  }
}

// Grafic resourses. Filters.
@mixin image-filter( $filter-type: grayscale, $filter-amount:100% ) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

// Transitions.
@mixin transition( $properties: all, $time:.5s ) {
  -webkit-transition: $properties $time;
  transition: $properties $time;
}

// Don't show
%dontshow{
  position: absolute !important;
  top: -9999rem;
  left: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

// Clearfix
%clearfix{
  *zoom: 1;
  &:before,
  &:after{
    content: " ";
    display: table;
  }
  &:after{
    clear: both;
  }
}

// Wrap
%wrap{
  @include breakpoint(md){
    margin: 0 auto;
    max-width: 960px;
    width: 100%;
  }
  @include breakpoint(lg){
    max-width: 1140px;
  }
}

// List unstyled.
%list-unstyled{
  margin-left: 0;
  padding-left: 0;
  li{
    list-style: none;
  }
}

// List inline.
%list-inline{
  margin: 0;
  padding: 0;
  li{
    display: inline-block;
    list-style: none;
    +li{
      margin-left: 5px;
    }
  }
}

// Featured paragraph.
%paragraph-meta{
  margin: 0;
  font-family: $font-family-sans-serif-bold;
  font-size: $font-size-sm;
  padding: ( $magic-number / 4 ) 0;
  a{
    border-bottom: none;
  }
}
