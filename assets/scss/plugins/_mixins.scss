/*
 *
 * Mixins
 *
 */

// Media Queries
@mixin breakpoint( $breakpoint ) {
	@if map-has-key( $breakpoints, $breakpoint) {
		@media ( min-width: #{ map-get( $breakpoints, $breakpoint ) }) {
			@content;
		}
	}
	@else if type_of( $breakpoint)==number and unit( $breakpoint)==px or unit( $breakpoint)==em or unit( $breakpoint)==rem {
		@media (min-width: $breakpoint) {
			@content;
		}
	}
	@else {
		@warn "Unfortunately no value could be retrieved from `#{$breakpoint}`. "+"Please make sure it is defined in `$breakpoints` map, or it is a valid number with supported unit of px, em or rem.";
	}
}

// Boders
@mixin borderB( $width: 1px, $style: solid, $color: $gray-lighter ) {
	border: $width $style $color;
}

@mixin borderBT( $width: 1px, $style: solid, $color: $gray-lighter ) {
	border-top: $width $style $color;
}

@mixin borderBR( $width: 1px, $style: solid, $color: $gray-lighter ) {
	border-right: $width $style $color;
}

@mixin borderBB( $width: 1px, $style: solid, $color: $gray-lighter ) {
	border-bottom: $width $style $color;
}

@mixin borderBL( $width: 1px, $style: solid, $color: $gray-lighter ) {
	border-left: $width $style $color;
}

// Flex
@mixin flex( $justifycontent: center, $alignitems: center ) {
	display: -ms-flexbox;
	display: flex;
	justify-content: $justifycontent;
	align-items: $alignitems;
}

// Grid
@mixin grid( $grid-gap-vertical: $magic-number, $grid-gap-horizontal: $magic-number ) {
	display: -ms-grid;
	display: grid;
	grid-gap: $grid-gap-vertical $grid-gap-horizontal;
}

// Vertical rhythms
@mixin padding-vertical( $top: $magic-number, $bottom: $magic-number ) {
	padding-top: $top;
	padding-bottom: $bottom;
	@include breakpoint( lg ) {
		padding-top: calc($top * 2);
		padding-bottom: calc($bottom * 2);
	}
}

@mixin margin-vertical( $top: $magic-number, $bottom: $magic-number ) {
	margin-top: $top;
	margin-bottom: $bottom;
	@include breakpoint( lg ) {
		margin-top: calc($top * 2);
		margin-bottom: calc($bottom * 2);
	}
}

// Gutters
@mixin padding-horizontal( $right: calc($gutter / 2), $left: calc($gutter / 2) ) {
	padding-right: $right;
	padding-left: $left;
	@include breakpoint( $responsive-menu-break ) {
		padding-right: 0;
		padding-left: 0;
	}
}

// Buttons
@mixin button(
	$bgcolor: transparent,
	$bordercolor: $body-color,
	$color: $body-color,
	$display: inline-block,
	$fontfamily: $font-family-sans-serif,
	$fontsize: $font-size-xs,
	$fontweight: $font-weight-normal,
	$hovercolor: $white,
	$hoverbgcolor: $link-hover-color,
	$paddingx: $gutter,
	$paddingy: calc($magic-number / 4),
	$width: auto
	) {
	background-color: $bgcolor;
	border-radius: 0;
	color: $color;
	display: $display;
	font-size: $fontsize;
	font-family: $fontfamily;
	font-weight: $fontweight;
	padding: $paddingy $paddingx;
	transition: all .3s ease;
	text-align: center;
	width: $width;
	@include borderB( $color: $bordercolor );
	&:hover, &:active, &:focus {
		background-color: $hoverbgcolor;
		border-color: darken( $hoverbgcolor, 10% );
		color: $hovercolor;
		text-decoration: none;
	}
}

// Lists
@mixin main-list() {
	margin: 0;
	padding: 0;
	list-style: none;
	> li {
		margin: 0;
		padding-top: calc($magic-number / 2);
		padding-bottom: calc($magic-number / 2);
		@include flex( $justifycontent: start );
		&:before {
			content: url("../images/arrow-right.svg");
			color: $gray-light;
			font: normal $font-size-base $font-family-icons;
			line-height: $line-height-xs;
			margin-right: calc($gutter / 2);
		}
		a {
			color: $body-color;
			font-size: $font-size-sm;
		}
	}
}

@mixin main-menu() {
	margin: 0;
	padding: 0;
	list-style: none;
	li {
		a {
			display: block;
			padding: calc($magic-number / 2);
			@include borderB();
			font-size: $font-size-sm;
			font-weight: $font-weight-bold;
			color: $body-color;
			&:hover, &:active, &:focus {
				color: $white;
				background-color: $brand-primary;
			}
		}
	}
	li + li {
		a {
			border-top: none;
		}
	}
	li.current-menu-item a {
		color: $white;
		background-color: $brand-primary;
	}
}

@mixin social-menu( $color: $gray, $fontsize: $font-size-lg, $paddingy: 0 ) {
	@include list-inline();
	a {
		border-bottom: none;
		color: $color;
		font: $font-weight-normal $fontsize $font-family-icons;
		line-height: 1;
		padding-left: $paddingy;
		padding-right: $paddingy;
		text-decoration: none;
		text-transform: none;
		-webkit-font-smoothing: antialiased;
		&:hover, &:active, &:focus {
			color: $color;
		}
		span {
			display: none;
		}
	}
	a[href*="facebook.com"]:before {
		content: "\e902";
	}
	a[href*="twitter.com"]:before {
		content: "\e904";
	}
	a[href*="instagram.com"]:before {
		content: "\e905";
	}
	a[href*="youtube.com"]:before {
		content: "\e906";
	}
	a[href*="wa.me"]:before,
	a[href*="whatsapp"]:before {
		content: "\e903";
	}
	> li:first-of-type a {
		padding-left: 0;
	}
}

// Entries default.
@mixin entries-default() {
	.entry-image-link {
		margin-bottom: $magic-number;
	}
	.entry-title {
		margin-top: 0;
		margin-bottom: calc($magic-number / 2);
		a {
			color: $body-color;
		}
	}
	.entry-content {
		@include clearfix();
		p {
			margin-bottom: 0;
		}
		.post-image {
			margin-bottom: $magic-number;
		}
	}
	.entry-footer {
		@include clearfix();
	}
	+ .entry {
		margin-top: ( $magic-number * 1.5 );
		padding-top: ( $magic-number * 2 );
		@include borderBT();
	}
	@include breakpoint( $responsive-menu-break ) {
		padding-top: $magic-number;
		padding-bottom: $magic-number;
		+ .entry {
			margin-top: 0;
		}
		.entry-content {
			font-size: $font-size-md;
			.post-image {
				margin-bottom: 0;
			}
		}
	}
}

// Entries grid.
@mixin entries-grid() {
	overflow: hidden;
	margin-bottom: calc($magic-number / 2);
	@include clearfix();
	.entry-image-link {
		display: block;
		overflow: hidden;
		img {
			object-fit: cover;
			width: 100%;
		}
	}
	.entry-title {
		font: $font-weight-bold $font-size-base $font-family-sans-serif;
		line-height: $line-height-md;
		margin: 0;
		text-transform: uppercase;
		a {
			color: $body-color;
		}
	}
	.entry-content {
		font-size: $font-size-sm;
		p {
			border-bottom: 0;
		}
	}
	.entry-footer {
	}
	+ .entry {
		margin-top: $magic-number;
		@include breakpoint( md ) {
			margin-top: 0;
		}
	}
}

// Grafic resourses.
// Border after.
@mixin border-after( $width: 10%, $height: 4px, $bgcolor: $brand-primary, $margin-y: $magic-number, $margin-x: 0 ) {
	&:after{
		content: ' ';
		display: block;
		width: $width;
		height: $height;
		margin: calc($margin-y / 2) 0;
		background-color: $bgcolor;
		@include breakpoint( lg ){
			margin: calc($margin-y / 2) $margin-x $margin-y;
		}
	}
}

// Grafic resourses.
// Filters.
@mixin image-filter( $filter-type: grayscale, $filter-amount:100% ) {
	-webkit-filter: $filter-type+unquote('(#{$filter-amount})');
	filter: $filter-type+unquote('(#{$filter-amount})');
}

// Transitions.
@mixin transition( $properties: all, $time:.5s ) {
	-webkit-transition: $properties $time;
	transition: $properties $time;
}

// Clearfix
@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Wrap
@mixin wrap() {
	@include padding-horizontal();
	@include breakpoint( md ) {
		margin-left: auto;
		margin-right: auto;
		max-width: $grid-max-width-md;
		width: 100%;
	}
	@include breakpoint( lg ){
		max-width: $grid-max-width-lg;
	}
	@include breakpoint( xl ){
		max-width: $grid-max-width-xl;
	}
	@include breakpoint( xxl ){
		max-width: $grid-max-width-xxl;
	}
	@include breakpoint( xxxl ){
		max-width: $grid-max-width-xxxl;
	}
}

// Narrow
@mixin narrow() {
	@include padding-horizontal();
	@include breakpoint( $responsive-menu-break ){
		margin-left: auto;
		margin-right: auto;
		width: ( $gutter * 30 );
	}
}

// List unstyled.
@mixin list-unstyled() {
	margin-left: 0;
	padding-left: 0;
	li {
		list-style: none;
	}
}

// List inline.
@mixin list-inline() {
	margin: 0;
	padding: 0;
	li {
		display: inline-block;
		list-style: none;
		+ li {
			margin-left: calc($gutter / 6);
		}
	}
}

// Embeds responsive
//
// Credit: Nicolas Gallagher and SUIT CSS.
%embed-responsive {
	position: relative;
	display: block;
	height: 0;
	padding: 0 0 56.25%;
	overflow: hidden;
	.embed-responsive-item,
	iframe,
	embed,
	object {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		height: 100%;
		width: 100%;
		border: 0;
	}
	&.embed-responsive-4by3 {
		padding-bottom: 75%;
	}
}

// Don't show
%dontshow {
	position: absolute !important;
	top: -9999rem;
	left: auto;
	width: 1px;
	height: 1px;
	overflow: hidden;
}

// Featured paragraph.
%paragraph-meta {
	margin: 0;
	font-family: $font-weight-bold;
	font-size: $font-size-sm;
	padding: calc($magic-number / 4) 0;
}

// Table.
%table {
	border-collapse: collapse;
	border-spacing: 0;
	empty-cells: show;
	margin-bottom: $magic-number;
	margin-top: $magic-number;
	width: 100%;
	td,
	th {
		padding: calc($magic-number / 4) $gutter;
		@include borderB( $color: $gray-light );
	}
	th {
		background-color: $gray-dark;
		color: $white;
		font-weight: $font-weight-bold;
		text-align: left;
	}
}
