/*
 *
 * Structure
 *
 */

// Hide overflow-y to fullwidth blocks.
body {
	.site-container {
		overflow: hidden;
	}
}

// Site Inner.
body:not(.genesis-title-hidden) {
	.site-inner {
		padding-top: $magic-number;
		padding-bottom: $magic-number;
	}
}

// Wrap.
.wrap {
	@include wrap();
}

// Narrow.
.narrow {
	@include narrow();
}

// Narrow without margins.
.narrow-without-margins {
	@include narrow-without-margins();
}

// Full width.
// body.full-width-content {
// 	.content-sidebar-wrap {
// 		width: 100%;
// 	}
// }

// Full width with wrap.
body.content-sidebar {
	.content-sidebar-wrap {
		@include wrap();
	}
}
body.sidebar-content {
	.content-sidebar-wrap {
		@include wrap();
	}
}
body.sidebar-content-sidebar {
	.content-sidebar-wrap {
		@include wrap();
	}
}
body.wrap-content {
	.content-sidebar-wrap {
		@include wrap();
	}
}

// Narrow.
body.narrow-content {
	.content-sidebar-wrap {
		@include narrow();
	}
}

// Layouts entries.
// If have archive description or breadcrumb, have to uncomment:
// - This
// - grid-template-areas
// body.grid-entries {
// 	.content {
// 		.archive-description {
// 			grid-area: header;
// 		}
// 		.breadcrumb {
// 			grid-area: breadcrumb;
// 		}
// 	}
// }

// Layouts entries. Three, Four, Five width entry.
body.grid-entries {
	.content {
		@include grid();
		grid-template-columns: repeat(2, 1fr [col-start]);
		grid-template-rows: auto;
		// grid-template-areas:
		// 	"header header"
		// 	"breadcrumb breadcrumb";
	}
}

// 768px
@include breakpoint( md ){

	// Layouts entries. Two width entry.
	body.width-2-entries {
		.content {
			@include grid( $grid-gap-horizontal: ( $magic-number * 2 ), $grid-gap-vertical: ( $magic-number * 2 ) );
			grid-template-columns: repeat(2, 1fr [col-start]);
			grid-template-rows: auto;
			// grid-template-areas:
			// 	"header header"
			// 	"breadcrumb breadcrumb";
		}
	}

}

// 1200px
@include breakpoint( $responsive-menu-break ) {

	// Site Inner.
	body:not(.genesis-title-hidden) {
		.site-inner {
			padding-top: ( $magic-number * 2 );
			padding-bottom: ( $magic-number * 2 );
		}
	}

	// Narrow.
	body.narrow-content {
		.entry > .entry-content {
			margin: 0 auto;
		}
	}

	// Layouts entries. Tree width entry.
	body.width-3-entries {
		.content {
			grid-template-columns: repeat(3, 1fr [col-start]);
			// grid-template-areas:
			// 	"header header header"
			// 	"breadcrumb breadcrumb breadcrumb";
		}
	}

	// Layouts entries. Four width entry.
	body.width-4-entries {
		.content {
			grid-template-columns: repeat(4, 1fr [col-start]);
			// grid-template-areas:
			// 	"header header header header"
			// 	"breadcrumb breadcrumb breadcrumb breadcrumb";
		}
	}

	// Layouts entries. Five width entry.
	body.width-5-entries {
		.content {
			grid-template-columns: repeat(5, 1fr [col-start]);
			// grid-template-areas:
			// 	"header header header header header"
			// 	"breadcrumb breadcrumb breadcrumb breadcrumb breadcrumb";
		}
	}

	body.content-sidebar,
	body.sidebar-content,
	body.sidebar-content-sidebar {
		.content-sidebar-wrap {
			main {
				grid-area: main;
				max-width: 100%;
			}
			.sidebar-primary {
				grid-area: sidebar-1;
				max-width: 100%;
			}
			.sidebar-secondary {
				grid-area: sidebar-2;
				max-width: 100%;
			}
		}
	}

	body.content-sidebar {
		.content-sidebar-wrap {
			@include grid( $grid-gap-vertical: 0, $grid-gap-horizontal: 0 );
			grid-template-columns: 1fr 1fr ( $gutter * 3 ) ( $gutter * 14 );
			grid-template-areas: "main main . sidebar-1";
			main {
				padding-right: ( $gutter * 3 );
				@include borderBR();
			}
		}
	}

	body.sidebar-content {
		.content-sidebar-wrap {
			@include grid( $grid-gap-vertical: 0, $grid-gap-horizontal: 0 );
			grid-template-columns: ( $gutter * 15 ) ( $gutter * 3 ) 1fr 1fr;
			grid-template-areas: "sidebar-1 . main main";
			main {
				padding-left: ( $gutter * 3 );
				@include borderBL();
			}
		}
	}

	body.sidebar-content-sidebar {
		.content-sidebar-wrap {
			@include grid( $grid-gap-vertical: 0, $grid-gap-horizontal: 0 );
			grid-template-columns: ( $gutter * 10 ) $gutter 1fr 1fr $gutter ( $gutter * 10 );
			grid-template-areas: "sidebar-1 . main main . sidebar-2";
			main {
				padding-right: $gutter;
				padding-left: $gutter;
				@include borderBR();
				@include borderBL();
			}
		}
	}

}

// 1400px
@include breakpoint( xxl ) {

	body.content-sidebar {
		.content-sidebar-wrap {
			grid-template-columns: 1fr 1fr ( $gutter * 2 ) ( $gutter * 16 );
		}
	}

}

// 1700px
@include breakpoint( xxxl ) {

	body.content-sidebar {
		.content-sidebar-wrap {
			grid-template-columns: 1fr 1fr ( $gutter * 3 ) ( $gutter * 20 );
		}
	}

}
